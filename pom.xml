<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonarsource.parent</groupId>
    <artifactId>parent</artifactId>
    <version>41</version>
  </parent>

  <artifactId>sonar-scala-plugin</artifactId>
  <packaging>sonar-plugin</packaging>
  <version>0.1.0-SNAPSHOT</version>

  <name>Sonar Scala Plugin</name>
  <description>Enables analysis of Scala projects into Sonar.</description>
  <url>http://github.com/sbartram/sonar-scala</url>
  <inceptionYear>2017</inceptionYear>

  <licenses>
    <license>
      <name>GNU LGPL v3</name>
      <url>http://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
      <name>Sagacify</name>
      <url>https://www.sagacify.com</url>
  </organization>

  <developers>
    <developer>
      <id>aborsu</id>
      <name>Augustin Borsu</name>
      <email>a.borsu@gmail.com</email>
      <url>http://www.acelpb.com/</url>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:sbartram/sonar-scala.git</connection>
    <developerConnection>scm:git:git@github.com:sbartram/sonar-scala.git</developerConnection>
    <url>https://github.com/sbartram/sonar-scala</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <url>https://github.com/sbartram/sonar-scala/issues</url>
  </issueManagement>

  <properties>
    <license.title>SonarQube Scala</license.title>
    <license.years>2009-2018</license.years>
    <license.owner>SonarSource SA</license.owner>
    <license.mailto>mailto:info AT sonarsource DOT com</license.mailto>
    <sonar.version>6.5</sonar.version>
    <sonar.pluginKey>scala</sonar.pluginKey>
    <sonar.pluginName>Scala</sonar.pluginName>
    <sonar.pluginClass>com.sagacify.sonar.scala.ScalaPlugin</sonar.pluginClass>

    <scala.major.version>2.11</scala.major.version>
    <scala.version>${scala.major.version}.8</scala.version>


  </properties>

  <dependencies>
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>

    <dependency>
      <groupId>org.scalariform</groupId>
      <artifactId>scalariform_${scala.major.version}</artifactId>
      <version>0.2.6</version>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-library</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>

    <!-- unit tests -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.major.version}</artifactId>
      <version>3.0.4</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-library</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.12.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-testing-harness</artifactId>
      <version>${sonar.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>18.0</version>
    </dependency>

    <dependency>
      <groupId>org.scalastyle</groupId>
      <artifactId>scalastyle_${scala.major.version}</artifactId>
      <version>1.0.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-library</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-core</artifactId>
      <version>${sonar.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <sourceDirectory>src/main/scala</sourceDirectory>

    <plugins>

      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <version>1.3.0</version>
      </plugin>

      <!-- disable surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>

      <!-- enable scalatest -->
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- enable scala-maven -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

</project>
